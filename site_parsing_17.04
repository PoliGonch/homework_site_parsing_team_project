import pprint
from dataclasses import dataclass

import requests
from bs4 import BeautifulSoup


@dataclass
class HCPVariant:
    volume: str
    descr: str


@dataclass
class Product:
    name: str
    product_link: str
    image: str
    brand: str
    new_price: str
    old_price: str

    def load_me(self):
        pass


class ParseConnect:
    BASE_URL = 'https://sisters.co.ua'

    def __init__(self, page_url='https://sisters.co.ua/v-nezmivn-zasobi'):
        self.__page_url = page_url
        self.session = requests.Session()
        self.bs = None

    @property
    def page_url(self):
        return self.__page_url

    @page_url.setter
    def page_url(self, new_page_url):
        self.__page_url = new_page_url

    def __iter__(self):
        self.i = 2
        return self

    def __next__(self):
        if self.get_data() == []:
            raise StopIteration
        self.page_url = f'https://sisters.co.ua/v-nezmivn-zasobi/page/{self.i}'
        self.i += 1


    def preload_page_bs(self):
        res = self.session.get(self.page_url, headers={
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36'
        }, allow_redirects=False)
        if res.status_code == 200:
            self.bs = BeautifulSoup(res.text, 'lxml')
        else:
            self.bs = BeautifulSoup('', 'lxml')

    def get_data(self) -> list[Product]:
        self.preload_page_bs()
        main_div = self.bs.find_all('div', class_='card')
        print(self.preload_info(main_div))
        # return self.preload_info(main_div)

    def preload_info(self, product_cards: list[BeautifulSoup]):
        return [self.create_product(card) for card in product_cards]

    def create_product(self, card):
        name = card.find('div', class_='card-inner').text.strip()
        product_link = 'https://sisters.co.ua' + card.find('div', class_='card-inner').find('a').attrs['href']
        image = 'https://sisters.co.ua' + card.find('img').attrs['src']
        brand = card.find('div', class_='card-brand').text.strip()
        new_price = card.find_all('p')[-1].text.replace('Ціна ', '').replace(' грн.', '')
        old_price = card.find_all('p')[0].text.replace('Ціна ', '').replace(' грн.', '')
        return Product(name=name, product_link=product_link, image=image, brand=brand, new_price=new_price,
                       old_price=old_price)


class ProductList:
    '''
    This class will return products one by one and make them gathered of the page
    '''


#
    def __iter__(self):
        i = 0

        self.setup_class()
        self.fill_info(self.bs_data())

    def setup_class(self):
        self.list_of_hcp = []

    def __next__(self):
        if self.pizza_list:
            if self.i <= len(self.pizza_list) - 1:
                self.i += 1
                return self.pizza_list[self.i - 1]
        raise StopIteration


# print(ParseConnect.main_div)

# https://sisters.co.ua/v-nezmivn-zasobi/page/2

b = ParseConnect()
# pprint.pprint(b.get_data())
i = iter(b)
while True:
    next(i)
